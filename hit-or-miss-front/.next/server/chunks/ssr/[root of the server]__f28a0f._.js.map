{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/socket.js"],"sourcesContent":["import io from 'socket.io-client';\n\nconst socket = io('http://localhost:3001');\n\nexport default socket;"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,MAAM,SAAS,CAAA,GAAA,wLAAA,CAAA,UAAE,AAAD,EAAE;uCAEH"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/chatbox.jsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from 'react';\nimport socket from '../socket';\n\nconst Chatbox = () => {\n    const [messages, setMessages] = useState([]);\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        socket.on('chat message', (message) => {\n            setMessages((prevMessages) => [...prevMessages, message]);\n        });\n\n        return () => {\n            socket.off('chat message');\n        };\n    }, []);\n\n    const sendMessage = () => {\n        if (message.trim()) {\n            socket.emit('chat message', message);\n            setMessage(''); \n        }\n    };\n\n    return (\n        <div className=\"fixed right-0 top-0 h-full w-1/4 bg-gray-800 text-white flex flex-col justify-between shadow-lg p-4\">\n            <h2 className=\"text-lg font-bold mb-4\">Chatbox</h2>\n            <div className=\"flex-grow overflow-y-auto mb-4 bg-gray-700 p-4 rounded-md\">\n                {messages.map((msg, index) => (\n                    <p key={index} className=\"bg-gray-600 p-2 rounded-md mb-2\">Message {index + 1}: {msg}</p>\n                ))}\n            </div>\n            <div className=\"flex items-center\">\n                <input\n                    type=\"text\"\n                    className=\"flex-grow p-2 rounded-l-md bg-gray-600 border-none focus:outline-none\"\n                    placeholder=\"Type your message\"\n                    value={message}\n                    onChange={(e) => setMessage(e.target.value)}\n                />\n                <button\n                    onClick={sendMessage}\n                    className=\"bg-blue-500 hover:bg-blue-600 text-white p-2 rounded-r-md\">\n                    Send\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Chatbox;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU;IACZ,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,oHAAA,CAAA,UAAM,CAAC,EAAE,CAAC,gBAAgB,CAAC;YACvB,YAAY,CAAC,eAAiB;uBAAI;oBAAc;iBAAQ;QAC5D;QAEA,OAAO;YACH,oHAAA,CAAA,UAAM,CAAC,GAAG,CAAC;QACf;IACJ,GAAG,EAAE;IAEL,MAAM,cAAc;QAChB,IAAI,QAAQ,IAAI,IAAI;YAChB,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,gBAAgB;YAC5B,WAAW;QACf;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAG,WAAU;0BAAyB;;;;;;0BACvC,8OAAC;gBAAI,WAAU;0BACV,SAAS,GAAG,CAAC,CAAC,KAAK,sBAChB,8OAAC;wBAAc,WAAU;;4BAAkC;4BAAS,QAAQ;4BAAE;4BAAG;;uBAAzE;;;;;;;;;;0BAGhB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBACG,MAAK;wBACL,WAAU;wBACV,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;kCAE9C,8OAAC;wBACG,SAAS;wBACT,WAAU;kCAA4D;;;;;;;;;;;;;;;;;;AAM1F;uCAEe"}},
    {"offset": {"line": 263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/room/[roomId]/page.jsx"],"sourcesContent":["\"use client\";\n\nimport { useParams } from 'next/navigation';\nimport { useEffect, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Chatbox from '../../components/chatbox'; // Ton composant Chatbox\nimport socket from '../../socket';\n\nconst QuizRoom = () => {\n    const { roomId } = useParams();  // Récupère le roomId de l'URL\n    const [players, setPlayers] = useState([]);\n    const [username, setUsername] = useState([]);\n\n    useEffect(() => {\n\n      socket.emit('joinRoom', {\n        roomId: roomId, \n        playerName: username ? username : 'Anonyme', \n        playerId: uuidv4()\n      });\n\n      socket.on('playerJoinedRoom', (updatedPlayers) => {\n          setPlayers(updatedPlayers);\n      });\n\n      // return () => {\n      //     socket.off('playerJoinedRoom');\n      // };\n  }, []);\n  \n    return (\n        <div className=\"relative\">\n            <h1>Room: {roomId}</h1>\n            <div>\n                <h2>Joueurs dans la room</h2>\n                <ul>\n                    {players.map(player => (\n                        <li key={player.playerId}>{player.playerName}</li>\n                    ))}\n                </ul>\n            </div>\n\n            <Chatbox /> \n        </div>\n    );\n};\n\nexport default QuizRoom;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA,oOAAgD,wBAAwB;AACxE;AAFA;AAJA;;;;;;;AAQA,MAAM,WAAW;IACb,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD,KAAM,8BAA8B;IAC/D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QAER,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,YAAY;YACtB,QAAQ;YACR,YAAY,WAAW,WAAW;YAClC,UAAU,CAAA,GAAA,kLAAA,CAAA,KAAM,AAAD;QACjB;QAEA,oHAAA,CAAA,UAAM,CAAC,EAAE,CAAC,oBAAoB,CAAC;YAC3B,WAAW;QACf;IAEA,iBAAiB;IACjB,sCAAsC;IACtC,KAAK;IACT,GAAG,EAAE;IAEH,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;;oBAAG;oBAAO;;;;;;;0BACX,8OAAC;;kCACG,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCACI,QAAQ,GAAG,CAAC,CAAA,uBACT,8OAAC;0CAA0B,OAAO,UAAU;+BAAnC,OAAO,QAAQ;;;;;;;;;;;;;;;;0BAKpC,8OAAC,oIAAA,CAAA,UAAO;;;;;;;;;;;AAGpB;uCAEe"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}